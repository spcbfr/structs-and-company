---
import { type CollectionEntry, getCollection } from "astro:content";
import BlogPost from "../../layouts/BlogPost.astro";
import Aside from "../../components/BaseMDXComponents/Aside.astro";
import Callout from "../../components/Callout.astro";
import Img from "../../components/BaseMDXComponents/Img.astro";
import CCode from "../../components/CCode.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;
export const prerender = true;
const { Content } = await post.render();
---

<BlogPost {...post.data} slug={"posts/" + post.slug}>
  {
    post.data.archived ? (
      <blockquote >
          <strong>notice:</strong>
          This post has been archived, probably because it's content isn't too
          good or because I added it to my website after it's published data for
          historic reasons but don't want it to show up on the RSS Feed
      </blockquote>
    ) : null
  }
  <Content
    components={{
      Aside,
      Img,
      Code: CCode,
      Callout,
    }}
  />
</BlogPost>

<script>
  const pres = document.querySelectorAll("[data-title]");
  pres.forEach((pre) => {
    const titleValue = pre.getAttribute("data-title");
    const titleBlock = document.createElement("span");
    titleBlock.textContent = titleValue;
    titleBlock.classList.add("code-title");
    pre.prepend(titleBlock);
  });
</script>
