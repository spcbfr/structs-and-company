---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import Link from "../../components/Link.astro";

const posts = (await getCollection("blog")).sort(
	(a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);

// Sample array of objects

// Step 1: Group by y
type GroupedObj = {
	[P: string]: typeof posts;
};

const groupedByYear: GroupedObj = posts.reduce((acc: GroupedObj, item) => {
	const year = item.data.pubDate.getFullYear().toString();
	if (!acc[year]) {
		acc[year] = [];
	}
	acc[year].push(item);
	return acc;
}, {});
console.log(groupedByYear);

// Step 2: Convert object to array
const resultArray: { year: number; items: typeof posts }[] = Object.entries(
	groupedByYear,
).map(([year, items]) => ({
	year: parseInt(year),
	items,
}));

// Step 3: Sort array by year
resultArray.sort((a, b) => b.year - a.year);

// Optionally, Step 4: Sort items within each year
resultArray.forEach((group) => {
	group.items.sort(
		(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);
});
---

<BaseLayout>
	<nav class="flex text-xl my-2 font-medium font-serif justify-between">
		<Link href="/">home/</Link>
		<Link href="/posts">posts/</Link>
		<Link href="/about">about/</Link>
	</nav>
	<header class="mt-5">
		<img
			src="/45.jpg"
			class="h-40 mb-3 mx-auto"
			alt="A somewhat surprised white man, Black and White, light face on dark background with a broken glass effect"
		/>
		<h1 class="text-5xl text-center font-display">Structs & Company</h1>
	</header>
	<section>
		{
			resultArray.map((item) => (
				<article class="mb-5">
					<h2 class="font-smallcaps font-bold text-4xl">
						{item.year}
					</h2>
					<ul class="space-y-2 ">
						{item.items.map((post) => (
							<li class="font-serif flex gap-4  text-xl">
								<time
									datetime={post.data.pubDate.toISOString()}
									class="font-smallcaps text-stone-700 w-8"
								>
									{post.data.pubDate.toLocaleString("en-US", {
										month: "short",
									})}
								</time>
								<Link href={"/posts/" + post.slug}>
									{post.data.title}
								</Link>
							</li>
						))}
					</ul>
				</article>
			))
		}
	</section>
</BaseLayout>
